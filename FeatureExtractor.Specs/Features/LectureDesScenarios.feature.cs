// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18444
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace FeatureExtractor.Specs.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class LectureDesScenariosFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "LectureDesScenarios.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "LectureDesScenarios", "In order to avoid silly mistakes\nAs a math idiot\nI want to be told the sum of two" +
                    " numbers", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "LectureDesScenarios")))
            {
                FeatureExtractor.Specs.Features.LectureDesScenariosFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Lecture des exigences")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LectureDesScenarios")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("lecture")]
        public virtual void LectureDesExigences()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Lecture des exigences", new string[] {
                        "lecture"});
#line 7
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "ligne"});
            table1.AddRow(new string[] {
                        "REQUIREMENTS EXTRACTION (RQ-FRT)"});
            table1.AddRow(new string[] {
                        "Document-Source: P:\\Trixell_TMA\\16 - Exigences\\AGEX_VIT\\docs\\CDS-003896-00J Speci" +
                            "fications Fonctionnelles VIT.docm"});
            table1.AddRow(new string[] {
                        "Document-Name: CDS-003896-00J Specifications Fonctionnelles VIT.docm [filtre=ESD]" +
                            ""});
            table1.AddRow(new string[] {
                        "Extracted-By: apetitgenet with agexWordMacros (Astek-RhA) 20090303 + apetitgenet/" +
                            "GNB-DT-005 with agexSplitReqs (Astek-RhA) 20090423 [filter=ESD]"});
            table1.AddRow(new string[] {
                        "Date-Time: 31/10/2014 - 14:59:03 + 2014/10/31-14:59"});
            table1.AddRow(new string[] {
                        "@=@=@REQUIREMENT@=@=@"});
            table1.AddRow(new string[] {
                        "ReqID= ESD_044"});
            table1.AddRow(new string[] {
                        "TITRE= Utilisation de la bibliothèque IO_Image pour définir les zones de ROI [p.1" +
                            "5]"});
            table1.AddRow(new string[] {
                        "VER= 00"});
            table1.AddRow(new string[] {
                        "Exigence(s)-Amont= ESG-TXL-VIT-001 (P)"});
            table1.AddRow(new string[] {
                        "Catégorie= Interopérabilité"});
            table1.AddRow(new string[] {
                        "Criticité= Préférable"});
            table1.AddRow(new string[] {
                        "Impact= Faible"});
            table1.AddRow(new string[] {
                        "Stabilité= MoyenneImportante"});
            table1.AddRow(new string[] {
                        "Vérif.= Test"});
            table1.AddRow(new string[] {
                        "TEXTE=   Gestion des informations dans la barre de statusstatuts [p.29]"});
            table1.AddRow(new string[] {
                        "Commentaire(s)="});
            table1.AddRow(new string[] {
                        "Statut= A valider"});
            table1.AddRow(new string[] {
                        "Date-Statut= 09/05/2014"});
            table1.AddRow(new string[] {
                        "@=@=@REQUIREMENT@=@=@"});
            table1.AddRow(new string[] {
                        "ReqID= ESD_544"});
            table1.AddRow(new string[] {
                        "TITRE= Utilisation de la bibliothèque IO_Image pour définir les zones de ROI [p.1" +
                            "5]"});
            table1.AddRow(new string[] {
                        "VER= 00"});
            table1.AddRow(new string[] {
                        "Exigence(s)-Amont= ESG-TXL-VIT-001 (P)"});
            table1.AddRow(new string[] {
                        "Catégorie= Interopérabilité"});
            table1.AddRow(new string[] {
                        "Criticité= Préférable"});
            table1.AddRow(new string[] {
                        "Impact= Faible"});
            table1.AddRow(new string[] {
                        "Stabilité= MoyenneImportante"});
            table1.AddRow(new string[] {
                        "Vérif.= Test"});
            table1.AddRow(new string[] {
                        "TEXTE=   Gestion des informations dans la barre de status           statuts [p.29" +
                            "]"});
            table1.AddRow(new string[] {
                        "Commentaire(s)="});
            table1.AddRow(new string[] {
                        "Statut= A valider"});
            table1.AddRow(new string[] {
                        "Date-Statut= 09/05/2014"});
            table1.AddRow(new string[] {
                        "@=@=@REQUIREMENT@=@=@"});
#line 8
 testRunner.Given("Le fichier ESD.agex contenant les lignes:", ((string)(null)), table1, "Given ");
#line 44
 testRunner.When("j\'analyse ce fichier", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 45
 testRunner.Then("j\'ai l\'exigences ESD_044 avec comme texte \"Gestion des informations dans la barre" +
                    " de statusstatuts [p.29]\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 46
     testRunner.And("j\'ai l\'exigences ESD_544 avec comme texte \"Gestion des informations dans la barre" +
                    " de status           statuts [p.29]\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
